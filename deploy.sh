#!/bin/bash

# üöÄ –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è Telegram WebApp
# –í–µ—Ä—Å–∏—è: 1.0

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
check_prerequisites() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤–µ—Ä—Å–∏–∏ 18 –∏–ª–∏ –≤—ã—à–µ."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
    if ! command -v npm &> /dev/null; then
        print_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Netlify CLI
    if ! command -v netlify &> /dev/null; then
        print_warning "Netlify CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
        npm install -g @netlify/cli
    fi
    
    print_success "–í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    npm install
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
build_project() {
    print_status "–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    npm run build
    print_success "–ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
check_env_vars() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã..."
    
    if [ -z "$BOT_TOKEN" ] && [ -z "$TELEGRAM_BOT_TOKEN" ]; then
        print_warning "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_TOKEN –∏–ª–∏ TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        print_warning "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ Netlify"
    else
        print_success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ
test_function() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ webhook..."
    
    if [ -f "netlify/functions/webhook.js" ]; then
        print_success "–§—É–Ω–∫—Ü–∏—è webhook –Ω–∞–π–¥–µ–Ω–∞"
    else
        print_error "–§—É–Ω–∫—Ü–∏—è webhook –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ netlify/functions/webhook.js"
        exit 1
    fi
}

# –î–µ–ø–ª–æ–π –Ω–∞ Netlify
deploy_to_netlify() {
    print_status "–î–µ–ø–ª–æ–π –Ω–∞ Netlify..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if ! netlify status &> /dev/null; then
        print_warning "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Netlify"
        print_status "–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
        netlify login
    fi
    
    # –î–µ–ø–ª–æ–π
    print_status "–ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è..."
    netlify deploy --prod --dir=build --functions=netlify/functions
    
    print_success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∞–π—Ç–µ
get_site_info() {
    print_status "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∞–π—Ç–µ..."
    netlify status
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è Telegram WebApp"
    echo "=================================="
    
    check_prerequisites
    install_dependencies
    build_project
    check_env_vars
    test_function
    deploy_to_netlify
    get_site_info
    
    echo "=================================="
    print_success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ! üéâ"
    print_status "–ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
    print_status "1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN –≤ Netlify"
    print_status "2. –û–±–Ω–æ–≤–∏—Ç—å webhook URL –≤ –±–æ—Ç–µ"
    print_status "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å WebApp –≤ Telegram"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    "check")
        check_prerequisites
        ;;
    "build")
        build_project
        ;;
    "test")
        test_function
        ;;
    "deploy")
        deploy_to_netlify
        ;;
    "full"|"")
        main
        ;;
    "help"|"-h"|"--help")
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  full      - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  check     - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π"
        echo "  build     - –¢–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
        echo "  test      - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π"
        echo "  deploy    - –¢–æ–ª—å–∫–æ –¥–µ–ø–ª–æ–π (–±–µ–∑ —Å–±–æ—Ä–∫–∏)"
        echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        ;;
    *)
        print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        print_status "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac
