import { Telegraf } from 'telegraf';

export default async function handler(req, res) {
  console.log('üß™ Test WebApp endpoint called');
  
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    
    if (!BOT_TOKEN) {
      return res.status(500).json({ error: 'Bot token not configured' });
    }

    const bot = new Telegraf(BOT_TOKEN);
    const ADMIN_CHAT_ID = '1155907659';
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π WebApp
    const message = `üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebApp
    
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å WebApp –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–∫–∞–∑–æ–≤:`;

    await bot.telegram.sendMessage(ADMIN_CHAT_ID, message, {
      reply_markup: {
        inline_keyboard: [[{
          text: 'üõçÔ∏è –û—Ç–∫—Ä—ã—Ç—å WebApp',
          web_app: { url: 'https://bot-blue-five.vercel.app' }
        }]]
      }
    });
    
    console.log('‚úÖ Test WebApp message sent to admin');
    res.status(200).json({ 
      ok: true, 
      message: 'Test WebApp message sent',
      webapp_url: 'https://bot-blue-five.vercel.app'
    });
  } catch (error) {
    console.error('‚ùå Error in test-webapp:', error);
    res.status(500).json({ error: 'Internal server error', details: error.message });
  }
}
